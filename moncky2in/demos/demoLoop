;save values from 0-1023 in memory addresses 1023-0
;r10 - value
;r11 - address
;r12 - label for while loop
;r1  - store 1 for ALU
;r8  - store 8 for shifting (it's convenient)
;r2, r3 - ALU operation on value

li   r10,   0         ;value register
li   r11,   0x03      ;load left half of number 1023
li   r8,    8         ;load 8 for shifting bits in next instruction
shl  r11,   r8        ;shift left half of number 1023 left by 8 bits
li   r1,    1         ;load a 1 for future use
li   r12,   :loop     ;load the label :loop into r12

:loop                 :label for the while loop

st   r10,   (r11)     ;store value of r10 into memory address r11

add  r10,   r1        ;increment value by 1
sub  r11,   r1        ;decrement address by 1

nop  r2,    r11       ;copy the value of memory address to r2
li   r3,    0         ;load 0 into r3

sub  r3,    r2        ;
jps  r12              ;jump to :label if address is greater than 0 (0

halt
